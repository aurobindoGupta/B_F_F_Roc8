import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Int8 = ColumnType<string, string | number | bigint, string | number | bigint>;

export type Numeric = ColumnType<string, string | number, string | number>;

export interface Admin {
  id: Generated<number>;
  email: string;
  password: string;
}

export interface PgStatStatements {
  userid: number | null;
  dbid: number | null;
  queryid: Int8 | null;
  query: string | null;
  plans: Int8 | null;
  total_plan_time: number | null;
  min_plan_time: number | null;
  max_plan_time: number | null;
  mean_plan_time: number | null;
  stddev_plan_time: number | null;
  calls: Int8 | null;
  total_exec_time: number | null;
  min_exec_time: number | null;
  max_exec_time: number | null;
  mean_exec_time: number | null;
  stddev_exec_time: number | null;
  rows: Int8 | null;
  shared_blks_hit: Int8 | null;
  shared_blks_read: Int8 | null;
  shared_blks_dirtied: Int8 | null;
  shared_blks_written: Int8 | null;
  local_blks_hit: Int8 | null;
  local_blks_read: Int8 | null;
  local_blks_dirtied: Int8 | null;
  local_blks_written: Int8 | null;
  temp_blks_read: Int8 | null;
  temp_blks_written: Int8 | null;
  blk_read_time: number | null;
  blk_write_time: number | null;
  wal_records: Int8 | null;
  wal_fpi: Int8 | null;
  wal_bytes: Numeric | null;
}

export interface Students {
  id: Generated<number>;
  first_name: string;
  last_name: string | null;
  age: number;
  gender: string;
  teacher_id: number;
}

export interface Teachers {
  id: Generated<number>;
  first_name: string;
  last_name: string | null;
  age: number;
  gender: string;
  email: string | null;
}

export interface DB {
  admin: Admin;
  pg_stat_statements: PgStatStatements;
  students: Students;
  teachers: Teachers;
}
